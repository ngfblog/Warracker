name: Build & Publish Docker image

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
      - "release-*"
  pull_request:
    branches: ["main"]
  workflow_dispatch:

# Required to push to GitHub Container Registry (GHCR)
permissions:
  contents: read
  packages: write

concurrency:
  group: docker-publish-${{ github.ref }}
  cancel-in-progress: false

env:
  # Image name -> ghcr.io/<owner>/warracker
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/warracker

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          # Will produce tags like:
          # - latest (on default branch)
          # - exact tag on git tag push (e.g., v1.2.3)
          # - semver variants (1.2.3, 1.2, 1) if your tag is semver
          # - sha-<commit> for all builds
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha,format=long,prefix=sha-
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.title=Warracker
            org.opencontainers.image.description=Self-hosted warranty tracker
            org.opencontainers.image.url=https://github.com/${{ github.repository }}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          # IMPORTANT: set this to your Dockerfile path if different
          file: ./Docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Build cache via GitHub Actions cache
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Post-publish summary
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Published to: ${{ env.IMAGE_NAME }}"
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
